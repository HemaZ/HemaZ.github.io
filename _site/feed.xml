

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Ibrahim's Blog</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2023-12-13T16:35:04+00:00</updated>
  <author>
    <name>Ibrahim Essam</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> Â© 2023 Ibrahim Essam </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Obj files symbols</title>
    <link href="http://localhost:4000/posts/linking/" rel="alternate" type="text/html" title="Obj files symbols" />
    <published>2023-12-13T11:55:01+00:00</published>
  
    <updated>2023-12-13T11:55:01+00:00</updated>
  
    <id>http://localhost:4000/posts/linking/</id>
    <content src="http://localhost:4000/posts/linking/" />
    <author>
      <name>Ibrahim Essam</name>
    </author>

  
    
    <category term="SW" />
    
    <category term="Building" />
    
  

  
    <summary>
      





      Inspecting Obj files symbols

Symbol is one of the basic terms when talking about object files, linking, and so on. In fact, in C/C++ language, symbol is the corresponding entity of most user-defined variables, function names, mangled with namespace, class/struct/name, and so on. For example, a C/C++ compiler may generate symbols in an object file when people define non-static global variables ...
    </summary>
  

  </entry>

</feed>


